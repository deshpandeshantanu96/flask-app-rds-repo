name: Build, Test & Deploy to EKS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: my-eks-cluster-aws-1
  ECR_REPOSITORY: my-flask-app  # Just the repository name, not full URI
  ECR_REGISTRY: 445567099825.dkr.ecr.us-east-1.amazonaws.com  # Separate registry

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4  # Updated to v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

  deploy-to-eks:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'  # Fixed to match your trigger branch
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure EKS credentials
      run: |
        aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS
      env:
        FULL_IMAGE_NAME: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
      run: |
        # Create deployment if it doesn't exist
        if ! kubectl get deployment/flask-app; then
          kubectl apply -f k8s/deployment.yaml
        else
          kubectl set image deployment/flask-app app=${{ env.DOCKER_IMAGE }}
        fi
        kubectl rollout status deployment/flask-app
        
        # Verify deployment
        kubectl get pods -n default
        kubectl get svc -n default

#code: 1