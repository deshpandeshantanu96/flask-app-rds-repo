name: Deploy to Argo CD

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.27'

      - name: Set up ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/download/v2.10.7/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Port-forward ArgoCD server
        run: |
          kubectl port-forward svc/argocd-server -n argocd 8080:80 &
          sleep 10

      - name: Get ArgoCD admin password
        id: get-password
        run: |
          PASS=$(kubectl get secret argocd-initial-admin-secret -n argocd \
            -o jsonpath="{.data.password}" | base64 -d)
          echo "::add-mask::$PASS"
          echo "ARGOCD_PASS=$PASS" >> $GITHUB_ENV

      - name: Login to ArgoCD
        run: |
          argocd login localhost:8080 \
            --username admin \
            --password "$ARGOCD_PASS" \
            --insecure

      - name: Create new ArgoCD app
        run: |
          argocd app create customer-app \
            --repo https://github.com/deshpandeshantanu96/flask-app-rds-repo.git \
            --path customer-app \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace default \
            --sync-policy auto

      - name: Sync customer-app
        run: |
          argocd app sync customer-app
